{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SACtBD,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBAEtCF,EAAKG,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBACF,IAAMC,EAAeF,EAAEG,cAAcC,SAC/BC,EAAQC,OAAOJ,EAAaK,MAAMC,OAClCC,EAAOH,OAAOJ,EAAaQ,KAAKF,OAChCG,EAASL,OAAOJ,EAAaU,OAAOJ,OAE1CK,YAAW,WACT,I,kBAEEA,YAAW,WAajB,IAAuBC,EAAUC,GAAVD,EAZDE,EAYWD,EAZDV,EAAOW,EAASP,EAavC,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCT,YAAW,WACLO,EACFF,EAAQ,CAACJ,WAAUP,MAAAQ,IAEnBI,EAAO,CAACL,WAAUP,MAAAQ,MAEnBA,OArBEQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUW,EAAKD,EAALjB,MACjBmB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAff,EAAS,QAAYe,OAANJ,EAAM,UAEvEK,OAAM,SAAAN,G,IAAGV,EAAQU,EAARV,SAAUiB,EAAKP,EAALjB,MAClBmB,EAAAhC,GAASiC,OAAOK,QAAQ,sBAAqCH,OAAff,EAAS,QAAYe,OAANE,EAAM,YAEpEtB,IAVIwB,EAAW,EAAGA,GAAYtB,EAAQsB,IAAUC,EAAAD,KAYpD5B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  const formElements = e.currentTarget.elements;\n  const delay = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n\n  setTimeout(() => {\n    for (let position = 1; position <= amount; position++) {\n    \n      setTimeout(() => {\n        createPromise(position, delay+ position*step)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      }, step);\n    } \n  }, delay);\n})\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  })\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","delay1","Number","delay","value","step1","step","amount1","amount","setTimeout","position","delay4","position1","Promise","resolve","reject","shouldResolve","Math","random","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","position11","_loop"],"version":3,"file":"03-promises.f78f4245.js.map"}